<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pavit Bhutani&#39;s Blog</title>
    <link>https://pavitbhutani.github.io/</link>
    <description>Recent content on Pavit Bhutani&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Nov 2020 16:15:00 +0000</lastBuildDate>
    
	<atom:link href="https://pavitbhutani.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to use vSphere Web Services API with PowerCLI</title>
      <link>https://pavitbhutani.github.io/2-how-to-use-vsphere-web-services-api-powershell/</link>
      <pubDate>Sun, 01 Nov 2020 16:15:00 +0000</pubDate>
      
      <guid>https://pavitbhutani.github.io/2-how-to-use-vsphere-web-services-api-powershell/</guid>
      <description>Introduction In this post, we&amp;rsquo;ll look at how to use vSphere Web Services API to perform tasks that cannot be done natively with PowerCLI commands. I will use the example of adding a host physical NIC to the specified LAG on a dVS.
This post uses PowerShell Core 7.0.2, lab environment used is vSphere 7.0 GA. Let&amp;rsquo;s go through it:
Step 1: The Starting Point - Managed Object Type: vSphere Web Services API is where you look up the Managed Object Type you want to work with, against which a &amp;ldquo;method&amp;rdquo; will be invoked that will perform the desired task.</description>
    </item>
    
    <item>
      <title>How to Deploy a VM Template from Content Library using vSphere Automation API</title>
      <link>https://pavitbhutani.github.io/1-content-library-vm-deploy-rest-api/</link>
      <pubDate>Wed, 15 Jul 2020 13:33:50 +0000</pubDate>
      
      <guid>https://pavitbhutani.github.io/1-content-library-vm-deploy-rest-api/</guid>
      <description>Introduction In this post, we&amp;rsquo;ll look at how to deploy a VM from from a template in content library using vSphere Automation API available at VMware Developer Documentation, formerly known as VMware API Explorer. I will use PowerShell in this post but you can use any other tool of choice as long as it can interact with json.
This functionality can be extended to your ITSM tool as well if it provides the option to make API calls to other solutions like vSphere, giving you the ability to automate standard change requests like VM creation.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://pavitbhutani.github.io/page/about/</link>
      <pubDate>Fri, 03 Apr 2015 02:13:50 +0000</pubDate>
      
      <guid>https://pavitbhutani.github.io/page/about/</guid>
      <description>About Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean nec dolor in magna lobortis egestas. Suspendisse eu erat tempor, tristique neque eu, convallis nulla. Curabitur vel bibendum lacus, at semper mauris. Suspendisse aliquet commodo ex, sed sagittis metus aliquam id. Maecenas feugiat rutrum lorem vel imperdiet. Nullam ornare lectus ut enim finibus, et porttitor mi tincidunt. Aenean lacinia, leo quis vehicula eleifend, quam libero sagittis erat, at euismod augue mauris et sapien.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://pavitbhutani.github.io/page/contact/</link>
      <pubDate>Fri, 03 Apr 2015 02:13:50 +0000</pubDate>
      
      <guid>https://pavitbhutani.github.io/page/contact/</guid>
      <description>Contact Aenean ipsum justo, semper eu nisl ut, pretium tincidunt sem. Praesent et diam sit amet lacus lobortis dictum a id lacus. Quisque hendrerit sit amet turpis eu varius. Ut id lorem ac felis ultrices tincidunt. Pellentesque consequat arcu ac fringilla imperdiet. Phasellus pellentesque, sapien non pulvinar blandit, sapien ante aliquet felis, vel porttitor sapien ante in lacus. Fusce non urna aliquet, malesuada nibh vel, luctus urna. Phasellus ut lacus molestie, varius purus quis, malesuada lorem.</description>
    </item>
    
  </channel>
</rss>